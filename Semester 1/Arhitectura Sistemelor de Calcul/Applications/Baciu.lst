     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  extern exit              
     5                                  import exit msvcrt.dll  
     6                                  extern scanf              
     7                                  import scanf msvcrt.dll  
     8                                  extern fopen              
     9                                  import fopen msvcrt.dll 
    10                                  extern fclose              
    11                                  import fclose msvcrt.dll 
    12                                  extern fprintf              
    13                                  import fprintf msvcrt.dll 
    14                                  extern printf              
    15                                  import printf msvcrt.dll 
    16                                  segment data use32 class=data
    17 00000000 00000000                    nr dd 0
    18 00000004 666973696572657861-         fisier db "fisierexamen.txt",0
    18 0000000D 6D656E2E74787400   
    19 00000015 7700                        acces db "w",0
    20 00000017 256400                      format db "%d",0
    21 0000001A 2000                        spatiu db " ",0
    22 0000001C 00000000                    descriptor dd 0
    23 00000020 00000000                    contor dd 0
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 68[15000000]                    push dword acces
    27 00000005 68[04000000]                   push dword fisier
    28 0000000A FF15[00000000]                 call [fopen]
    29 00000010 83C408                         add esp,4*2
    30                                         
    31 00000013 A3[1C000000]                   mov [descriptor],eax
    32 00000018 83F800                         cmp eax,0
    33 0000001B 0F849A000000                   je final
    34                                         
    35                                         repeta:
    36 00000021 60                             pushad
    37 00000022 68[00000000]                   push dword nr
    38 00000027 68[17000000]                   push dword format
    39 0000002C FF15[00000000]                 call [scanf]
    40 00000032 83C408                         add esp,4*2
    41 00000035 61                             popad
    42                                         
    43 00000036 A1[00000000]                   mov eax,dword[nr]
    44 0000003B 83F800                         cmp eax,dword 0
    45 0000003E 746C                           je gata
    46                                         
    47 00000040 89C2                           mov edx,eax
    48 00000042 83F801                         cmp eax,1
    49 00000045 7E60                           jle next
    50                                  
    51 00000047 C705[20000000]0000-            mov dword [contor],0
    51 0000004F 0000               
    52                                         do:
    53 00000051 FF05[20000000]                 inc dword [contor]
    54 00000057 D1E0                           shl eax,1
    55 00000059 7202                           jc am_gasit_1
    56 0000005B EBF4                           jmp do
    57                                         
    58                                         am_gasit_1:
    59 0000005D B920000000                     mov ecx,32
    60 00000062 2B0D[20000000]                 sub ecx,[contor]
    61 00000068 BB00000000                     mov ebx,0
    62                                         
    63                                         cautam_0:
    64 0000006D D1E0                           shl eax,1
    65 0000006F 7201                           jc peste
    66 00000071 43                             inc ebx
    67                                         peste:
    68 00000072 E2F9                           loop cautam_0
    69                                         
    70                                         ;push dword ebx
    71                                         ;push dword format
    72                                         ;call [printf]
    73                                         ;add esp,4*2
    74                                         
    75 00000074 83FB01                         cmp ebx,01h
    76 00000077 742E                           jz nu_afisam
    77 00000079 83FB00                         cmp ebx,0
    78 0000007C 7429                           je nu_afisam
    79 0000007E 52                             push dword edx
    80 0000007F 68[17000000]                   push dword format
    81 00000084 FF35[1C000000]                 push dword [descriptor]
    82 0000008A FF15[00000000]                 call [fprintf]
    83 00000090 83C40C                         add esp,4*3
    84 00000093 68[1A000000]                   push dword spatiu
    85 00000098 FF35[1C000000]                 push dword [descriptor]
    86 0000009E FF15[00000000]                 call [fprintf]
    87 000000A4 83C408                         add esp,4*2
    88                                         
    89                                         nu_afisam:
    90                                         
    91                                         
    92                                         
    93                                         
    94                                         next:
    95 000000A7 E975FFFFFF                     jmp repeta
    96                                         gata:
    97 000000AC FF35[1C000000]                 push dword [descriptor]
    98 000000B2 FF15[00000000]                 call [fclose]
    99 000000B8 83C404                         add esp,4
   100                                         final:
   101 000000BB 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   102 000000BD FF15[00000000]                  call    [exit]       ; call exit to terminate the program
