     1                                  bits 32
     2                                  global start
     3                                  
     4                                  ;27.Se da un fisier text. Fisierul contine numere (in baza 10) separate prin spatii. Sa se citeasca continutul acestui fisier, sa se determine minimul numerelor citite si sa se scrie rezultatul la sfarsitul fisierul
     5                                  
     6                                  extern exit, fopen, fprintf, fclose, fread
     7                                  extern scanf
     8                                  import scanf msvcrt.dll
     9                                  extern printf
    10                                  import printf msvcrt.dll
    11                                  import exit msvcrt.dll  
    12                                  import fopen msvcrt.dll  
    13                                  import fprintf msvcrt.dll
    14                                  import fclose msvcrt.dll
    15                                  import fread msvcrt.dll
    16                                  
    17                                  segment data use32 class=data
    18 00000000 00                         sir db 0
    19 00000001 6C6162382E322E7478-        nume_fisier db "lab8.2.txt",0
    19 0000000A 7400               
    20 0000000C 612B00                     mod_acces db "a+",0          ;APPEND+, daca fisierul nu exista se va crea
    21 0000000F FFFFFFFF                   descriptor_fis dd -1         ;variabila in care vom salva descriptorul fisierului - necesar pentru a putea face referire la fisier
    22 00000013 0A0D6E756D6172756C-        mesaj db 10,13,"numarul de caractere este: %d",10,13,0
    22 0000001C 206465206361726163-
    22 00000025 746572652065737465-
    22 0000002E 3A2025640A0D00     
    23 00000035 0A0D4D6572676500           mesaj2 db 10,13,"Merge",0
    24 0000003D 256400                     format db "%d",0
    25                                     len equ 100
    26 00000040 00<rept>                   text times len+1 db 0
    27 000000A5 00<rept>                   text2 times len+1 db 0
    28 0000010A 00000000                   numarCaractere dd 0
    29 0000010E 393939393939393939-        minim dd "9999999999",0
    29 00000117 39000000000000     
    30 0000011E 00000000                   contor dd 0
    31                                     
    32                                  segment code use32 class=code
    33                                      start:
    34 00000000 68[0C000000]                push dword mod_acces            ;
    35 00000005 68[01000000]                push dword nume_fisier          ;
    36 0000000A FF15[00000000]              call [fopen]                    ;
    37 00000010 83C408                      add esp,4*2                     ;
    38                                        
    39                                      ;  verificam daca functia fopen a creat cu succes fisierul (daca EAX != 0)
    40 00000013 A3[0F000000]                mov [descriptor_fis], eax       ;
    41 00000018 83F800                      cmp eax, 0                      ;
    42 0000001B 0F8492000000                je final                        ;
    43                                  
    44                                      
    45                                      ;repeta: 
    46                                      
    47 00000021 FF35[0F000000]                  push dword[descriptor_fis]  ;
    48 00000027 6A64                            push dword len              ;
    49 00000029 6A01                            push dword 1                ;
    50 0000002B 68[40000000]                    push dword text             ;
    51 00000030 FF15[00000000]                  call [fread]                ;
    52 00000036 83C410                          add esp, 4*4                ;
    53 00000039 83F800                          cmp eax,0                   ;
    54 0000003C 7406                            je gata                     ;
    55 0000003E 0105[0A010000]                  add [numarCaractere],eax    ;
    56                                          
    57                                      ;jmp repeta                      ;
    58                                          
    59                                      gata:                           ;
    60                                      
    61 00000044 68[40000000]                push dword text                 ;
    62 00000049 FF15[00000000]              call [printf]                   ;
    63 0000004F 83C404                      add esp, 4*1                    ;
    64                                          
    65 00000052 FF35[0A010000]              push dword[numarCaractere]      ;
    66 00000058 68[13000000]                push dword mesaj                ;
    67 0000005D FF15[00000000]              call [printf]                   ;
    68 00000063 83C408                      add esp, 4*2                    ;
    69                                      
    70 00000066 BE[40000000]                mov esi, text                   ;
    71 0000006B BF[A5000000]                mov edi, text2
    72 00000070 8B0D[0A010000]              mov ecx, dword[numarCaractere]  ;
    73 00000076 E33B                        jecxz final                     ;
    74 00000078 FC                          cld
    75                                      
    76 00000079 BB00000000                  mov ebx,0
    77                                      
    78                                      repeta:
    79 0000007E AC                              lodsb
    80 0000007F 3C20                            cmp al,' '
    81 00000081 7406                            je next
    82 00000083 AA                              stosb
    83 00000084 83C301                          add ebx,1
    84 00000087 EB19                            jmp next2
    85                                          
    86                                          next:
    87                                          
    88 00000089 68[A5000000]                    push dword text2;+contor
    89 0000008E FF15[00000000]                  call [printf]
    90 00000094 83C404                          add esp, 4*1
    91 00000097 011D[1E010000]                  add [contor],ebx
    92 0000009D BB00000000                      mov ebx,0
    93                                          next2:
    94                                          
    95 000000A2 E2DA                        loop repeta
    96                                          
    97                                          
    98 000000A4 FF35[0F000000]              push dword [descriptor_fis]     ;
    99 000000AA FF15[00000000]              call [fclose]                   ;
   100 000000B0 83C404                      add esp, 4                      ;
   101                                          
   102                                      final:                          ;
   103                                       
   104 000000B3 6A00                        push    dword 0     
   105 000000B5 FF15[00000000]              call    [exit]      
