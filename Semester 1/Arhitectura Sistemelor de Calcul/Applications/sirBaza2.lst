     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit , scanf, printf          
     6                                  import exit msvcrt.dll    
     7                                  import scanf msvcrt.dll                        
     8                                  import printf msvcrt.dll
     9                                  
    10                                  
    11                                  segment data use32 class=data
    12                                      ; ...
    13 00000000 770000000000000000-         sir dq 1110111b, 100000000b,0ABCD0002E7FCh,5
    13 00000009 01000000000000FCE7-
    13 00000012 0200CDAB0000050000-
    13 0000001B 0000000000         
    14                                      len equ ($-sir)/8
    15 00000020 00000000<rept>              rez times len dd 0
    16 00000030 00                          contor db 0
    17 00000031 257800                      format db "%x",0
    18 00000034 256300                      formatc db "%c",0
    19 00000037 31                          unu db "1"
    20 00000038 30                          zero db "0"
    21 00000039 00                          ok db 0
    22                                  
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 BE[00000000]                    mov esi,sir
    27 00000005 BF[20000000]                    mov edi,rez
    28 0000000A B904000000                      mov ecx,len
    29                                          
    30                                          repeta:
    31 0000000F AD                                  lodsd
    32 00000010 50                                  push eax
    33 00000011 BB00000000                          mov ebx,0
    34 00000016 C605[30000000]00                    mov byte[contor],0
    35                                              degree2:
    36                                                  
    37 0000001D D1E0                                    shl eax,1
    38 0000001F 7213                                    jc bit
    39 00000021 8A15[30000000]                          mov dl,[contor]
    40 00000027 80FA03                                  cmp dl,3
    41 0000002A 7201                                    jb nu_e_bun
    42 0000002C 43                                      inc ebx
    43                                                  nu_e_bun:
    44 0000002D C605[30000000]FF                        mov byte[contor],-1
    45                                                  bit:
    46 00000034 FE05[30000000]                          inc byte[contor]
    47 0000003A 83F800                                  cmp eax,0
    48 0000003D 7402                                    je next
    49 0000003F EBDC                                    jmp degree2
    50                                                  
    51                                              next:
    52                                              
    53 00000041 8A15[30000000]                      mov dl,[contor]
    54 00000047 80FA03                              cmp dl,3
    55 0000004A 7201                                jb nu_e_bun2
    56 0000004C 43                                  inc ebx
    57                                              nu_e_bun2:
    58                                              
    59 0000004D 58                                  pop eax
    60 0000004E 83FB02                              cmp ebx,2
    61 00000051 7255                                jb next2
    62                                              
    63 00000053 AB                                  stosd
    64 00000054 51                                  push ecx
    65 00000055 C605[39000000]00                    mov byte[ok],0
    66 0000005C B920000000                          mov ecx,32
    67                                              baza2:
    68 00000061 D1E0                                    shl eax,1
    69 00000063 7223                                    jc unu1
    70 00000065 8A1D[39000000]                          mov bl,[ok]
    71 0000006B 80FB00                                  cmp bl,0
    72 0000006E 7435                                    je gata1
    73 00000070 60                                      pushad
    74 00000071 FF35[38000000]                          push dword [zero]
    75 00000077 68[34000000]                            push dword formatc
    76 0000007C FF15[00000000]                          call [printf]
    77 00000082 83C408                                  add esp,8
    78 00000085 61                                      popad 
    79 00000086 EB1D                                    jmp gata1
    80                                                  unu1:
    81 00000088 C605[39000000]01                        mov byte[ok],1
    82 0000008F 60                                      pushad
    83 00000090 FF35[37000000]                          push dword [unu]
    84 00000096 68[34000000]                            push dword formatc
    85 0000009B FF15[00000000]                          call [printf]
    86 000000A1 83C408                                  add esp,8
    87 000000A4 61                                      popad
    88                                                  gata1:
    89 000000A5 E2BA                                loop baza2
    90 000000A7 59                                  pop ecx    
    91                                              next2:
    92                                              
    93 000000A8 60                                  pushad
    94 000000A9 6A20                                push dword " "
    95 000000AB 68[34000000]                        push dword formatc
    96 000000B0 FF15[00000000]                      call[printf]
    97 000000B6 83C408                              add esp,8
    98 000000B9 61                                  popad
    99                                              
   100 000000BA AD                                  lodsd
   101                                              
   102 000000BB 49                                  dec ecx
   103 000000BC 83F900                              cmp ecx,0
   104 000000BF 7405                                je final
   105 000000C1 E949FFFFFF                      jmp NEAR repeta
   106                                          
   107                                          final:
   108                                              
   109                                          ; exit(0)
   110 000000C6 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   111 000000C8 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
